require 'rails_helper'
require 'webmock/rspec'

RSpec.describe WeatherApi do
  describe '.fetch' do
    let(:lat) { 40.6561 }
    let(:lon) { -73.94958 }
    let(:timezone) { 'America/New_York' }
    let(:url) do
        "https://api.open-meteo.com/v1/forecast?timezone=#{timezone}&latitude=#{lat}&longitude=#{lon}&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,rain_sum,snowfall_sum,showers_sum,precipitation_probability_max&hourly=temperature_2m,precipitation_probability,rain,showers,snowfall&current=rain,showers,snowfall,precipitation,temperature_2m,is_day,wind_speed_10m,wind_direction_10m"
    end

    let(:api_response) do
      {"latitude":lat,"longitude":lon,"generationtime_ms":timezone,"utc_offset_seconds":-14400,"timezone":"America/New_York","timezone_abbreviation":"GMT-4","elevation":2753,"current_units":{"time":"iso8601","interval":"seconds","rain":"mm","showers":"mm","snowfall":"cm","precipitation":"mm","temperature_2m":"°C","is_day":"","wind_speed_10m":"km/h","wind_direction_10m":"°"},"current":{"time":"2025-06-16T15:15","interval":900,"rain":0,"showers":0,"snowfall":0,"precipitation":0,"temperature_2m":9.2,"is_day":0,"wind_speed_10m":5.9,"wind_direction_10m":76},"hourly_units":{"time":"iso8601","temperature_2m":"°C","precipitation_probability":"%","rain":"mm","showers":"mm","snowfall":"cm"},"hourly":{"time":["2025-06-16T00:00","2025-06-16T01:00","2025-06-16T02:00","2025-06-16T03:00","2025-06-16T04:00","2025-06-16T05:00","2025-06-16T06:00","2025-06-16T07:00","2025-06-16T08:00","2025-06-16T09:00","2025-06-16T10:00","2025-06-16T11:00","2025-06-16T12:00","2025-06-16T13:00","2025-06-16T14:00","2025-06-16T15:00","2025-06-16T16:00","2025-06-16T17:00","2025-06-16T18:00","2025-06-16T19:00","2025-06-16T20:00","2025-06-16T21:00","2025-06-16T22:00","2025-06-16T23:00","2025-06-17T00:00","2025-06-17T01:00","2025-06-17T02:00","2025-06-17T03:00","2025-06-17T04:00","2025-06-17T05:00","2025-06-17T06:00","2025-06-17T07:00","2025-06-17T08:00","2025-06-17T09:00","2025-06-17T10:00","2025-06-17T11:00","2025-06-17T12:00","2025-06-17T13:00","2025-06-17T14:00","2025-06-17T15:00","2025-06-17T16:00","2025-06-17T17:00","2025-06-17T18:00","2025-06-17T19:00","2025-06-17T20:00","2025-06-17T21:00","2025-06-17T22:00","2025-06-17T23:00","2025-06-18T00:00","2025-06-18T01:00","2025-06-18T02:00","2025-06-18T03:00","2025-06-18T04:00","2025-06-18T05:00","2025-06-18T06:00","2025-06-18T07:00","2025-06-18T08:00","2025-06-18T09:00","2025-06-18T10:00","2025-06-18T11:00","2025-06-18T12:00","2025-06-18T13:00","2025-06-18T14:00","2025-06-18T15:00","2025-06-18T16:00","2025-06-18T17:00","2025-06-18T18:00","2025-06-18T19:00","2025-06-18T20:00","2025-06-18T21:00","2025-06-18T22:00","2025-06-18T23:00","2025-06-19T00:00","2025-06-19T01:00","2025-06-19T02:00","2025-06-19T03:00","2025-06-19T04:00","2025-06-19T05:00","2025-06-19T06:00","2025-06-19T07:00","2025-06-19T08:00","2025-06-19T09:00","2025-06-19T10:00","2025-06-19T11:00","2025-06-19T12:00","2025-06-19T13:00","2025-06-19T14:00","2025-06-19T15:00","2025-06-19T16:00","2025-06-19T17:00","2025-06-19T18:00","2025-06-19T19:00","2025-06-19T20:00","2025-06-19T21:00","2025-06-19T22:00","2025-06-19T23:00","2025-06-20T00:00","2025-06-20T01:00","2025-06-20T02:00","2025-06-20T03:00","2025-06-20T04:00","2025-06-20T05:00","2025-06-20T06:00","2025-06-20T07:00","2025-06-20T08:00","2025-06-20T09:00","2025-06-20T10:00","2025-06-20T11:00","2025-06-20T12:00","2025-06-20T13:00","2025-06-20T14:00","2025-06-20T15:00","2025-06-20T16:00","2025-06-20T17:00","2025-06-20T18:00","2025-06-20T19:00","2025-06-20T20:00","2025-06-20T21:00","2025-06-20T22:00","2025-06-20T23:00","2025-06-21T00:00","2025-06-21T01:00","2025-06-21T02:00","2025-06-21T03:00","2025-06-21T04:00","2025-06-21T05:00","2025-06-21T06:00","2025-06-21T07:00","2025-06-21T08:00","2025-06-21T09:00","2025-06-21T10:00","2025-06-21T11:00","2025-06-21T12:00","2025-06-21T13:00","2025-06-21T14:00","2025-06-21T15:00","2025-06-21T16:00","2025-06-21T17:00","2025-06-21T18:00","2025-06-21T19:00","2025-06-21T20:00","2025-06-21T21:00","2025-06-21T22:00","2025-06-21T23:00","2025-06-22T00:00","2025-06-22T01:00","2025-06-22T02:00","2025-06-22T03:00","2025-06-22T04:00","2025-06-22T05:00","2025-06-22T06:00","2025-06-22T07:00","2025-06-22T08:00","2025-06-22T09:00","2025-06-22T10:00","2025-06-22T11:00","2025-06-22T12:00","2025-06-22T13:00","2025-06-22T14:00","2025-06-22T15:00","2025-06-22T16:00","2025-06-22T17:00","2025-06-22T18:00","2025-06-22T19:00","2025-06-22T20:00","2025-06-22T21:00","2025-06-22T22:00","2025-06-22T23:00"],"temperature_2m":[13.2,14.3,14.9,15.7,16,16.3,16.2,15.8,15.5,14.3,13.4,12.2,11.2,10.6,9.9,9.4,8.9,8.7,8.6,8.7,8.7,9.3,11,12.7,14.4,15.7,16.7,17.1,17.7,17.9,17.4,17.2,17,16.3,14.8,13.2,12.3,11.4,10.6,9.9,9.5,9.3,9,8.8,8.6,9.3,11.1,12.9,15.1,17.1,18.3,19.1,19.4,19.4,19.3,19.2,18.5,17.5,15.8,14.4,13.3,12.1,10.8,10.8,10.5,10.2,9.9,9.6,9.4,10,12,14.1,16.2,18.3,19.9,21,21.9,22.4,22.3,21.8,21.1,19.9,17.9,16.1,15.1,14.5,14.1,13.4,12.7,12.1,11.3,10.6,10.5,11.5,13.2,14.5,14.8,14.6,14.6,15.1,15.8,15.9,15.1,13.9,12.6,11.5,10.5,9.7,9.4,9.4,9.4,9.2,8.9,8.7,8.4,8.1,8.3,9.2,10.6,12.1,13.7,15.3,16.7,17.6,18.2,18.5,18.5,18.3,17.6,16.4,14.8,13.3,12.3,11.4,10.7,10.2,10,9.7,9.2,8.8,8.9,10.1,11.8,13.5,14.8,16,16.9,17.4,17.5,17.6,17.6,17.5,17.1,16.1,14.8,13.6,12.9,12.5,11.9,11,10,9.2,8.6,8.3,8.5,9.5,11.1,12.7],"precipitation_probability":[3,13,5,5,3,5,5,3,0,18,10,3,8,8,5,3,5,5,3,0,0,0,0,0,0,3,3,3,3,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,5,10,18,27,36,42,45,43,37,28,20,14,13,17,25,35,46,56,63,68,71,74,75,75,75,74,71,68,64,59,53,46,36,26,17,8,3,24,20,16,12,10,8,7,7,8,9,10,12,14,16,18,20,22,23,24,25,26,27,29,30,31,31,32,33,33,33,33,33,32,31,31,30,29,27,26,25,24,23,22,21,19],"rain":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1,0.1,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"showers":[0,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0.5,0.4,0.4,0.4,0.4,0.4,0.4,2.1,2.1,2.1,0.8,0.8,0.8,0.2,0.2,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3,0.3,0.3,0,0,0,0,0,0],"snowfall":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},"daily_units":{"time":"iso8601","temperature_2m_max":"°C","temperature_2m_min":"°C","sunrise":"iso8601","sunset":"iso8601","rain_sum":"mm","snowfall_sum":"cm","showers_sum":"mm","precipitation_probability_max":"%"},"daily":{"time":["2025-06-16","2025-06-17","2025-06-18","2025-06-19","2025-06-20","2025-06-21","2025-06-22"],"temperature_2m_max":[16.3,17.9,19.4,22.4,15.9,18.5,17.6],"temperature_2m_min":[8.6,8.6,9.4,10.5,8.1,8.8,8.3],"sunrise":["2025-06-15T19:32","2025-06-16T19:32","2025-06-17T19:32","2025-06-18T19:32","2025-06-19T19:33","2025-06-20T19:33","2025-06-21T19:33"],"sunset":["2025-06-16T10:36","2025-06-17T10:37","2025-06-18T10:37","2025-06-19T10:37","2025-06-20T10:38","2025-06-21T10:38","2025-06-22T10:38"],"rain_sum":[0,0,0,0,0.3,0,0],"snowfall_sum":[0,0,0,0,0,0,0],"showers_sum":[0.1,0.1,0,0,13.2,0,0.9],"precipitation_probability_max":[18,3,0,45,75,26,33]}}.to_json
    end

    it 'returns parsed weather data for valid input' do
      stub_request(:get, url).to_return(status: 200, body: api_response, headers: { 'Content-Type' => 'application/json' })

      result = described_class.fetch(lat, lon, timezone)
      expect(result['current']['temperature_2m']).to eq(9.2)
    end

    it 'raises error for invalid latitude' do
      expect {
        described_class.fetch(123.456, lon, timezone)
      }.to raise_error("Invalid latitude: 123.456")
    end

    it 'raises error for invalid longitude' do
      expect {
        described_class.fetch(lat, -999.99, timezone)
      }.to raise_error("Invalid longitude: -999.99")
    end

    it 'raises error for invalid timezone format' do
      expect {
        described_class.fetch(lat, lon, 'AmericaNewYork')
      }.to raise_error("Invalid timezone format: AmericaNewYork")
    end
  end
end